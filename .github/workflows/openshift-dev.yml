name: Build and Deploy to Openshift Dev When PR
permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"
      - "charts/app/values-dev.yml"
      - "frontend/**"
      - "lib/**"
      - ".github/workflows/openshift-*.yml"
  pull_request:
    paths:
      - "backend/**"
      - "charts/app/values-dev.yml"
      - "frontend/**"
      - "lib/**"
      - ".github/workflows/openshift-*.yml"
concurrency:
  # Cancel if re-attempted
  group: ${{ github.event_name }}
  cancel-in-progress: true

jobs:
  # https://github.com/bcgov-nr/action-builder-ghcr
  builds:
    name: Builds
    runs-on: ubuntu-22.04
    outputs:
      pr: ${{ steps.pr.outputs.pr }}
    strategy:
      matrix:
        package: [backend, frontend]
    timeout-minutes: 10
    steps:
      - name: Get PR Data
        id: pr
        uses: bcgov-nr/action-get-pr@v0.0.1    

      - name: Build and Tag Packages with pr number
        uses: bcgov-nr/action-builder-ghcr@v2.2.0
        with:
          keep_versions: 50
          package: ${{ matrix.package }}
          tag: ${{ steps.pr.outputs.pr }}
          tag_fallback: latest
          token: ${{ secrets.GITHUB_TOKEN }}
          #triggers: ('${{ matrix.package }}/')
          build_context: .
          build_file: ./${{ matrix.package}}/Dockerfile

      - if: github.event_name == 'push'
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN}}

      - if: github.event_name == 'push'
        name: Tag build as latest
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository }}/${{ matrix.package }}:latest \
            ghcr.io/${{ github.repository }}/${{ matrix.package }}:${{ steps.pr.outputs.pr }}
       
  
  call-shared:
    uses: ./.github/workflows/openshift-shared.yml
    needs: [builds]
    secrets: inherit
    with:
      target_environment: 'dev'
      ref: ${{ github.head_ref }}
      tag: ${{ needs.builds.outputs.pr }}
