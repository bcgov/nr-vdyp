services:

  db:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_DATABASE}
    volumes:
      # your init scripts (e.g. 1-schema.sql, 2-seed.sh) live here
      - ./initdb:/docker-entrypoint-initdb.d
      # persistent data volume
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h 127.0.0.1 -p 5432" ]
      interval: 5s
      timeout: 3s
      retries: 20

  # migrate vdyp database on startup
  vdyp-liquibase:
    depends_on:
      db:
        condition: service_healthy        # wait for DB readiness
    image: liquibase/liquibase:latest
    volumes:
      # Grab all the files from db directorey
      - ./db/liquibase:/liquibase/changelog:ro
    # Each argument is its own array element; no shell involved
    command:
      [
        "--url=jdbc:postgresql://db:5432/${VDYP_DB_DATABASE}?user=${VDYP_DB_USER}&password=${VDYP_DB_PASSWORD}&currentSchema=%22app-vdyp%22",
        "--changelog-file=vdyp-changelog.json",
        "--searchPath=/liquibase/changelog",
        "update",
        "-DVDYP_DB_PROXY_PASSWORD=${VDYP_DB_PROXY_PASSWORD}"
      ]

  coms:
    image: ghcr.io/bcgov/common-object-management-service:${COMS_TAG:-latest}
    depends_on:
      db:
        condition: service_healthy        # wait for DB readiness
    ports:
      - "3000:3000"
    entrypoint:
      - sh
      - -c
      - |
        npm run migrate &&
        npm start
    environment:
      # Object storage â€“ replace or override in your .env
      OBJECTSTORAGE_ENABLED: "true"
      OBJECTSTORAGE_ACCESSKEYID: ${OBJECTSTORAGE_ACCESSKEYID}
      OBJECTSTORAGE_SECRETACCESSKEY: ${OBJECTSTORAGE_SECRETACCESSKEY}
      OBJECTSTORAGE_BUCKET: ${OBJECTSTORAGE_BUCKET}
      OBJECTSTORAGE_ENDPOINT: ${OBJECTSTORAGE_ENDPOINT}
      OBJECTSTORAGE_KEY: ${OBJECTSTORAGE_KEY}

      BASICAUTH_ENABLED: "true"
      BASICAUTH_USERNAME: ${COMS_SERVICE_USERNAME}
      BASICAUTH_PASSWORD: ${COMS_SERVICE_PASSWORD}

      # DB connection
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: ${COMS_DB_USER}
      DB_PASSWORD: ${COMS_DB_PASSWORD}
      DB_DATABASE: ${COMS_DB_DATABASE}

      KC_ENABLED: "true"
      KC_PUBLICKEY: ${COMS_KEYCLOAK_PUBLICKEY}
      KC_REALM: ${COMS_KEYCLOAK_REALM}
      KC_SERVERURL: ${COMS_KEYCLOAK_SERVER_URL}

  vdyp-backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - backend/.env.vdypBackend
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
  
  vdyp-ui:
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    ports:
      - "5173:3000"
      - "3001:3001"
      - "3003:3003"
    env_file:
      - frontend/.env.vdypFrontend
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

volumes:
  db_data:
