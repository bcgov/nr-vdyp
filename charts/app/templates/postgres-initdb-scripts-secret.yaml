{{- if .Values.global.secrets.enabled}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-initdb-scripts
  labels: {{- include "labels" . | nindent 4 }}
  {{- if .Values.global.secrets.persist }}
  annotations:
    helm.sh/resource-policy: keep
  {{- end }}
type: Opaque
stringData:
  01-create-coms.sh: |-
        #!/bin/sh
        set -e
        export PGPASSWORD="${POSTGRES_PASSWORD}"
        psql -U postgres <<-EOSQL
          CREATE DATABASE {{ .Values.coms.env.DB_DATABASE }};
          CREATE USER {{ .Values.coms.env.DB_USERNAME }} WITH ENCRYPTED PASSWORD '{{ .Values.global.secrets.COMS_DB_PASSWORD }}';
          GRANT ALL PRIVILEGES ON DATABASE {{ .Values.coms.env.DB_DATABASE }} TO {{ .Values.coms.env.DB_USERNAME }};
        EOSQL

  02-create-vdyp.sh: |-
        #!/bin/sh
        set -e
        export PGPASSWORD="${POSTGRES_PASSWORD}"
        psql -U postgres <<-EOSQL
          CREATE DATABASE {{ .Values.backend.env.VDYP_DB_DATABASE }};
          CREATE USER {{ .Values.backend.env.VDYP_DB_USER }} WITH ENCRYPTED PASSWORD '{{ .Values.global.secrets.VDYP_DB_PASSWORD }}';
          GRANT ALL PRIVILEGES ON DATABASE {{ .Values.backend.env.VDYP_DB_DATABASE }} TO {{ .Values.backend.env.VDYP_DB_USER }};
        EOSQL

  03-create-batch.sh: |-
        #!/bin/sh
        set -e
        export PGPASSWORD="${POSTGRES_PASSWORD}"
        psql -U postgres <<-EOSQL
          CREATE DATABASE {{ .Values.batch.env.BATCH_DB_DATABASE }};
          CREATE USER {{ .Values.batch.env.BATCH_DB_USER }} WITH ENCRYPTED PASSWORD '{{ .Values.global.secrets.BATCH_DB_PASSWORD }}';
          GRANT ALL PRIVILEGES ON DATABASE {{ .Values.batch.env.BATCH_DB_DATABASE }} TO {{ .Values.batch.env.BATCH_DB_USER }};
        EOSQL

{{- end }}
