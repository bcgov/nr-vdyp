{{- if .Values.coms.enabled }}
{{- $host := printf "%s-%s" .Release.Name .Values.global.databaseAlias }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "coms.fullname" . }}
  labels:
    {{- include "coms.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: {{ .Values.coms.replicas }}
  selector:
    matchLabels:
      {{- include "coms.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "coms.labels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ include "coms.fullname" . }}
          image: "{{ .Values.coms.image.repository }}:{{ .Values.coms.image.tag }}"
          command:
            - sh
            - -c
            - |
              npm run migrate &&
              npm start
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}
          env:
            - name: OBJECTSTORAGE_ENABLED
              value: {{ .Values.coms.env.OBJECTSTORAGE_ENABLED | quote }}
            - name: OBJECTSTORAGE_ACCESSKEYID
              value: {{ .Values.coms.env.OBJECTSTORAGE_ACCESSKEYID | quote }}
            - name: OBJECTSTORAGE_SECRETACCESSKEY
              value: {{ .Values.coms.env.OBJECTSTORAGE_SECRETACCESSKEY | quote }}
            - name: OBJECTSTORAGE_BUCKET
              value: {{ .Values.coms.env.OBJECTSTORAGE_BUCKET | quote }}
            - name: OBJECTSTORAGE_ENDPOINT
              value: {{ .Values.coms.env.OBJECTSTORAGE_ENDPOINT | quote }}
            - name: OBJECTSTORAGE_KEY
              value: {{ .Values.coms.env.OBJECTSTORAGE_KEY | quote }}
            - name: BASICAUTH_ENABLED
              value: {{ .Values.coms.env.BASICAUTH_ENABLED | quote }}
            - name: BASICAUTH_USERNAME
              value: {{ .Values.coms.env.BASICAUTH_USERNAME | quote }}
            - name: BASICAUTH_PASSWORD
              value: {{ .Values.coms.env.BASICAUTH_PASSWORD | quote }}
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.coms.db_secret }}
                  key: port
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.coms.db_secret }}
                  key: host
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.coms.db_secret }}
                  key: dbname
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.coms.db_secret }}
                  key: user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.coms.db_secret }}
                  key: password
            - name: KC_ENABLED
              value: {{ .Values.coms.env.KC_ENABLED | quote }}
            - name: KC_PUBLICKEY
              value: {{ .Values.coms.env.KC_PUBLICKEY | quote }}
            - name: KC_REALM
              value: {{ .Values.coms.env.KC_REALM | quote }}
            - name: KC_SERVERURL
              value: {{ .Values.coms.env.KC_SERVERURL | quote }}
          ports:
            - containerPort: {{ .Values.coms.service.port }}
          readinessProbe:
            httpGet:
              path: /api/v1
              port: {{ .Values.coms.service.port }}
          livenessProbe:
            httpGet:
              path: /api/v1
              port: {{ .Values.coms.service.port }}
          resources:
            {{- toYaml .Values.coms.resources | nindent 12 }}
{{- end }}
