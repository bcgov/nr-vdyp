/*
 * Variable Density Yield Projection
 * API for the Variable Density Yield Projection service
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package ca.bc.gov.nrs.vdyp.backend.projection;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import ca.bc.gov.nrs.vdyp.backend.model.v1.UtilizationParameter;
import io.quarkus.runtime.annotations.RegisterForReflection;

/**
 * This class records a utilization class for a given sp0 (species group) name.
 */
@JsonPropertyOrder(
	{ ValidatedUtilizationParameter.JSON_PROPERTY_SPECIES_NAME, ValidatedUtilizationParameter.JSON_PROPERTY_UTILIZATION_CLASS }
)
@RegisterForReflection
public class ValidatedUtilizationParameter {
	public static final String JSON_PROPERTY_SPECIES_NAME = "speciesName";
	@JsonProperty(JSON_PROPERTY_SPECIES_NAME)
	private String speciesName;

	public static final String JSON_PROPERTY_UTILIZATION_CLASS = "utilizationClass";
	@JsonProperty(JSON_PROPERTY_UTILIZATION_CLASS)
	private UtilizationParameter.UtilizationClass utilizationClass;

	public ValidatedUtilizationParameter speciesName(String speciesName) {
		this.speciesName = speciesName;
		return this;
	}

	/**
	 * Get speciesName
	 *
	 * @return speciesName
	 **/
	@JsonProperty(value = "speciesName")

	public String getSpeciesName() {
		return speciesName;
	}

	public void setSpeciesName(String speciesName) {
		this.speciesName = speciesName;
	}

	/**
	 * Get utilizationClass
	 *
	 * @return utilizationClass
	 **/
	@JsonProperty(value = "utilizationClass")
	public UtilizationParameter.UtilizationClass getUtilizationClass() {
		return utilizationClass;
	}

	public ValidatedUtilizationParameter utilizationClass(UtilizationParameter.UtilizationClass utilizationClass) {
		setUtilizationClass(utilizationClass);
		return this;
	}

	public void setUtilizationClass(UtilizationParameter.UtilizationClass utilizationClass) {
		this.utilizationClass = utilizationClass;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ValidatedUtilizationParameter up = (ValidatedUtilizationParameter) o;
		return Objects.equals(this.speciesName, up.speciesName) && Objects.equals(this.utilizationClass, up.utilizationClass);
	}

	@Override
	public int hashCode() {
		return Objects.hash(speciesName, utilizationClass);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ");
		sb.append(ValidatedUtilizationParameter.class.getSimpleName());
		sb.append(" {\n    speciesName: ").append(toIndentedString(speciesName)).append("\n");
		sb.append("    utilizationClass: ").append(toIndentedString(utilizationClass)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces (except the first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}
