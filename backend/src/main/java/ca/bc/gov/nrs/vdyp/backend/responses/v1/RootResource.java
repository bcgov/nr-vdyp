/*
 * Variable Density Yield Projection
 * API for the Variable Density Yield Projection service
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package ca.bc.gov.nrs.vdyp.backend.responses.v1;

import java.util.Objects;
import java.util.Set;

import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonSubTypes.Type;

import ca.bc.gov.nrs.vdyp.backend.endpoints.v1.HelpEndpoint;
import ca.bc.gov.nrs.vdyp.backend.endpoints.v1.ProjectionEndpoint;

import com.fasterxml.jackson.annotation.JsonTypeInfo;

import io.quarkus.runtime.annotations.RegisterForReflection;
import jakarta.ws.rs.core.UriInfo;

/**
 * RootResponse
 */
@JsonPropertyOrder(
	{ //
			RootResource.JSON_PROPERTY_LINKS, //
	}
)
@RegisterForReflection
@JsonSubTypes({ @Type(value = RootResource.class, name = ResourceTypes.ROOT_RESOURCE) })
@JsonTypeInfo(
		use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", defaultImpl = RootResource.class
)
public class RootResource extends VdypApiResource {

	public RootResource(UriInfo uriInfo) {
		super(
				Set.of(
						Link.getSelfLink(uriInfo), //
						Link.getLink(uriInfo, "HelpResourceApi", "GET", HelpEndpoint.class), //
						Link.getLink(
								uriInfo, ResourceTypes.DCSV_PROJECTION, "POST", ProjectionEndpoint.class,
								"projectionDcsvPost"
						), //
						Link.getLink(
								uriInfo, ResourceTypes.SCSV_PROJECTION, "POST", ProjectionEndpoint.class,
								"projectionScsvPost"
						), //
						Link.getLink(
								uriInfo, ResourceTypes.HCSV_PROJECTION, "POST", ProjectionEndpoint.class,
								"projectionHcsvPost"
						) //
				)
		);
	}

	public static RootResource of(UriInfo uriInfo) {
		return new RootResource(uriInfo);
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		return true;
	}

	@Override
	public int hashCode() {
		return Objects.hash(17);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class RootResponse {}");
		return sb.toString();
	}
}
