/*
 * Variable Density Yield Projection
 * API for the Variable Density Yield Projection service
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package ca.bc.gov.nrs.vdyp.backend.v1.gen.model;

import java.io.File;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.quarkus.runtime.annotations.RegisterForReflection;
import jakarta.validation.Valid;

/**
 * ProjectionScsvPostRequest
 */
@JsonPropertyOrder(
	{ ProjectionScsvPostRequest.JSON_PROPERTY_PROJECTION_PARAMETERS,
			ProjectionScsvPostRequest.JSON_PROPERTY_POLYGON_INPUT_DATA,
			ProjectionScsvPostRequest.JSON_PROPERTY_LAYER_INPUT_DATA,
			ProjectionScsvPostRequest.JSON_PROPERTY_HISTORY_INPUT_DATA,
			ProjectionScsvPostRequest.JSON_PROPERTY_NON_VEGETATION_INPUT_DATA,
			ProjectionScsvPostRequest.JSON_PROPERTY_OTHER_VEGETATION_INPUT_DATA,
			ProjectionScsvPostRequest.JSON_PROPERTY_POLYGON_ID_INPUT_DATA,
			ProjectionScsvPostRequest.JSON_PROPERTY_SPECIES_INPUT_DATA,
			ProjectionScsvPostRequest.JSON_PROPERTY_VRI_ADJUST_INPUT_DATA }
)
@jakarta.annotation.Generated(
		value = "org.openapitools.codegen.languages.JavaJAXRSSpecServerCodegen", date = "2024-11-12T09:52:55.097945-08:00[America/Vancouver]", comments = "Generator version: 7.9.0"
)
@RegisterForReflection
public class ProjectionScsvPostRequest {
	public static final String JSON_PROPERTY_PROJECTION_PARAMETERS = "projectionParameters";
	@JsonProperty(JSON_PROPERTY_PROJECTION_PARAMETERS)
	private Parameters projectionParameters;

	public static final String JSON_PROPERTY_POLYGON_INPUT_DATA = "polygonInputData";
	@JsonProperty(JSON_PROPERTY_POLYGON_INPUT_DATA)
	private File polygonInputData;

	public static final String JSON_PROPERTY_LAYER_INPUT_DATA = "layerInputData";
	@JsonProperty(JSON_PROPERTY_LAYER_INPUT_DATA)
	private File layerInputData;

	public static final String JSON_PROPERTY_HISTORY_INPUT_DATA = "historyInputData";
	@JsonProperty(JSON_PROPERTY_HISTORY_INPUT_DATA)
	private File historyInputData;

	public static final String JSON_PROPERTY_NON_VEGETATION_INPUT_DATA = "nonVegetationInputData";
	@JsonProperty(JSON_PROPERTY_NON_VEGETATION_INPUT_DATA)
	private File nonVegetationInputData;

	public static final String JSON_PROPERTY_OTHER_VEGETATION_INPUT_DATA = "otherVegetationInputData";
	@JsonProperty(JSON_PROPERTY_OTHER_VEGETATION_INPUT_DATA)
	private File otherVegetationInputData;

	public static final String JSON_PROPERTY_POLYGON_ID_INPUT_DATA = "polygonIdInputData";
	@JsonProperty(JSON_PROPERTY_POLYGON_ID_INPUT_DATA)
	private File polygonIdInputData;

	public static final String JSON_PROPERTY_SPECIES_INPUT_DATA = "speciesInputData";
	@JsonProperty(JSON_PROPERTY_SPECIES_INPUT_DATA)
	private File speciesInputData;

	public static final String JSON_PROPERTY_VRI_ADJUST_INPUT_DATA = "vriAdjustInputData";
	@JsonProperty(JSON_PROPERTY_VRI_ADJUST_INPUT_DATA)
	private File vriAdjustInputData;

	public ProjectionScsvPostRequest projectionParameters(Parameters projectionParameters) {
		this.projectionParameters = projectionParameters;
		return this;
	}

	/**
	 * Get projectionParameters
	 *
	 * @return projectionParameters
	 **/
	@JsonProperty(value = "projectionParameters")
	@Valid
	public Parameters getProjectionParameters() {
		return projectionParameters;
	}

	public void setProjectionParameters(Parameters projectionParameters) {
		this.projectionParameters = projectionParameters;
	}

	public ProjectionScsvPostRequest polygonInputData(File polygonInputData) {
		this.polygonInputData = polygonInputData;
		return this;
	}

	/**
	 * a file containing the polygon input data in HCSV format.
	 *
	 * @return polygonInputData
	 **/
	@JsonProperty(value = "polygonInputData")

	public File getPolygonInputData() {
		return polygonInputData;
	}

	public void setPolygonInputData(File polygonInputData) {
		this.polygonInputData = polygonInputData;
	}

	public ProjectionScsvPostRequest layerInputData(File layerInputData) {
		this.layerInputData = layerInputData;
		return this;
	}

	/**
	 * a file containing the layer input data in HCSV format.
	 *
	 * @return layerInputData
	 **/
	@JsonProperty(value = "layerInputData")

	public File getLayerInputData() {
		return layerInputData;
	}

	public void setLayerInputData(File layerInputData) {
		this.layerInputData = layerInputData;
	}

	public ProjectionScsvPostRequest historyInputData(File historyInputData) {
		this.historyInputData = historyInputData;
		return this;
	}

	/**
	 * a file containing the history input data in HCSV format.
	 *
	 * @return historyInputData
	 **/
	@JsonProperty(value = "historyInputData")

	public File getHistoryInputData() {
		return historyInputData;
	}

	public void setHistoryInputData(File historyInputData) {
		this.historyInputData = historyInputData;
	}

	public ProjectionScsvPostRequest nonVegetationInputData(File nonVegetationInputData) {
		this.nonVegetationInputData = nonVegetationInputData;
		return this;
	}

	/**
	 * a file containing the non-vegetation input data in HCSV format.
	 *
	 * @return nonVegetationInputData
	 **/
	@JsonProperty(value = "nonVegetationInputData")

	public File getNonVegetationInputData() {
		return nonVegetationInputData;
	}

	public void setNonVegetationInputData(File nonVegetationInputData) {
		this.nonVegetationInputData = nonVegetationInputData;
	}

	public ProjectionScsvPostRequest otherVegetationInputData(File otherVegetationInputData) {
		this.otherVegetationInputData = otherVegetationInputData;
		return this;
	}

	/**
	 * a file containing the non-tree vegetation input data in HCSV format.
	 *
	 * @return otherVegetationInputData
	 **/
	@JsonProperty(value = "otherVegetationInputData")

	public File getOtherVegetationInputData() {
		return otherVegetationInputData;
	}

	public void setOtherVegetationInputData(File otherVegetationInputData) {
		this.otherVegetationInputData = otherVegetationInputData;
	}

	public ProjectionScsvPostRequest polygonIdInputData(File polygonIdInputData) {
		this.polygonIdInputData = polygonIdInputData;
		return this;
	}

	/**
	 * a file containing the polygon id input data in HCSV format.
	 *
	 * @return polygonIdInputData
	 **/
	@JsonProperty(value = "polygonIdInputData")

	public File getPolygonIdInputData() {
		return polygonIdInputData;
	}

	public void setPolygonIdInputData(File polygonIdInputData) {
		this.polygonIdInputData = polygonIdInputData;
	}

	public ProjectionScsvPostRequest speciesInputData(File speciesInputData) {
		this.speciesInputData = speciesInputData;
		return this;
	}

	/**
	 * a file containing the species input data in HCSV format.
	 *
	 * @return speciesInputData
	 **/
	@JsonProperty(value = "speciesInputData")

	public File getSpeciesInputData() {
		return speciesInputData;
	}

	public void setSpeciesInputData(File speciesInputData) {
		this.speciesInputData = speciesInputData;
	}

	public ProjectionScsvPostRequest vriAdjustInputData(File vriAdjustInputData) {
		this.vriAdjustInputData = vriAdjustInputData;
		return this;
	}

	/**
	 * a file containing the VRI adjust input data in HCSV format.
	 *
	 * @return vriAdjustInputData
	 **/
	@JsonProperty(value = "vriAdjustInputData")

	public File getVriAdjustInputData() {
		return vriAdjustInputData;
	}

	public void setVriAdjustInputData(File vriAdjustInputData) {
		this.vriAdjustInputData = vriAdjustInputData;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ProjectionScsvPostRequest projectionScsvPostRequest = (ProjectionScsvPostRequest) o;
		return Objects.equals(this.projectionParameters, projectionScsvPostRequest.projectionParameters)
				&& Objects.equals(this.polygonInputData, projectionScsvPostRequest.polygonInputData)
				&& Objects.equals(this.layerInputData, projectionScsvPostRequest.layerInputData)
				&& Objects.equals(this.historyInputData, projectionScsvPostRequest.historyInputData)
				&& Objects.equals(this.nonVegetationInputData, projectionScsvPostRequest.nonVegetationInputData)
				&& Objects.equals(this.otherVegetationInputData, projectionScsvPostRequest.otherVegetationInputData)
				&& Objects.equals(this.polygonIdInputData, projectionScsvPostRequest.polygonIdInputData)
				&& Objects.equals(this.speciesInputData, projectionScsvPostRequest.speciesInputData)
				&& Objects.equals(this.vriAdjustInputData, projectionScsvPostRequest.vriAdjustInputData);
	}

	@Override
	public int hashCode() {
		return Objects.hash(
				projectionParameters, polygonInputData, layerInputData, historyInputData, nonVegetationInputData,
				otherVegetationInputData, polygonIdInputData, speciesInputData, vriAdjustInputData
		);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ProjectionScsvPostRequest {\n");

		sb.append("    projectionParameters: ").append(toIndentedString(projectionParameters)).append("\n");
		sb.append("    polygonInputData: ").append(toIndentedString(polygonInputData)).append("\n");
		sb.append("    layerInputData: ").append(toIndentedString(layerInputData)).append("\n");
		sb.append("    historyInputData: ").append(toIndentedString(historyInputData)).append("\n");
		sb.append("    nonVegetationInputData: ").append(toIndentedString(nonVegetationInputData)).append("\n");
		sb.append("    otherVegetationInputData: ").append(toIndentedString(otherVegetationInputData)).append("\n");
		sb.append("    polygonIdInputData: ").append(toIndentedString(polygonIdInputData)).append("\n");
		sb.append("    speciesInputData: ").append(toIndentedString(speciesInputData)).append("\n");
		sb.append("    vriAdjustInputData: ").append(toIndentedString(vriAdjustInputData)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces (except the first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}
