/*
 * Variable Density Yield Projection
 * API for the Variable Density Yield Projection service
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package ca.bc.gov.nrs.vdyp.backend.v1.gen.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

import io.quarkus.runtime.annotations.RegisterForReflection;

/**
 * ParametersUtilsInner
 */
@JsonPropertyOrder({ ParametersUtilsInner.JSON_PROPERTY_SPECIES_NAME, ParametersUtilsInner.JSON_PROPERTY_VALUE })
@jakarta.annotation.Generated(
		value = "org.openapitools.codegen.languages.JavaJAXRSSpecServerCodegen", date = "2024-11-12T09:52:55.097945-08:00[America/Vancouver]", comments = "Generator version: 7.9.0"
)
@RegisterForReflection
public class ParametersUtilsInner {
	public static final String JSON_PROPERTY_SPECIES_NAME = "speciesName";
	@JsonProperty(JSON_PROPERTY_SPECIES_NAME)
	private String speciesName;

	/**
	 * Gets or Sets value
	 */
	public enum ValueEnum {
		EXCL("Excl"),

		_4_0("4.0"),

		_7_5("7.5"),

		_12_5("12.5"),

		_17_5("17.5"),

		_22_5("22.5");

		private String value;

		ValueEnum(String value) {
			this.value = value;
		}

		@Override
		@JsonValue
		public String toString() {
			return String.valueOf(value);
		}

		@JsonCreator
		public static ValueEnum fromValue(String value) {
			for (ValueEnum b : ValueEnum.values()) {
				if (b.value.equals(value)) {
					return b;
				}
			}
			throw new IllegalArgumentException("Unexpected value '" + value + "'");
		}
	}

	public static final String JSON_PROPERTY_VALUE = "value";
	@JsonProperty(JSON_PROPERTY_VALUE)
	private ValueEnum value;

	public ParametersUtilsInner speciesName(String speciesName) {
		this.speciesName = speciesName;
		return this;
	}

	/**
	 * Get speciesName
	 *
	 * @return speciesName
	 **/
	@JsonProperty(value = "speciesName")

	public String getSpeciesName() {
		return speciesName;
	}

	public void setSpeciesName(String speciesName) {
		this.speciesName = speciesName;
	}

	public ParametersUtilsInner value(ValueEnum value) {
		this.value = value;
		return this;
	}

	/**
	 * Get value
	 *
	 * @return value
	 **/
	@JsonProperty(value = "value")

	public ValueEnum getValue() {
		return value;
	}

	public void setValue(ValueEnum value) {
		this.value = value;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ParametersUtilsInner parametersUtilsInner = (ParametersUtilsInner) o;
		return Objects.equals(this.speciesName, parametersUtilsInner.speciesName)
				&& Objects.equals(this.value, parametersUtilsInner.value);
	}

	@Override
	public int hashCode() {
		return Objects.hash(speciesName, value);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ParametersUtilsInner {\n");

		sb.append("    speciesName: ").append(toIndentedString(speciesName)).append("\n");
		sb.append("    value: ").append(toIndentedString(value)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces (except the first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}
